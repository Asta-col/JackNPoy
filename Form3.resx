<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>